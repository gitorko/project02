plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java-library'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

allprojects {
    repositories {
        mavenCentral()
    }
}

/**
 * All subprojects will use these configurations
 */
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.demo'
    version = '1.0.0'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    /**
     * Here, we can define any dependencies to Maven artifacts in a certain version.
     * If we need one of those dependencies within a sub-module,
     * we can specify it in the sub-module without providing a version number since the version number will be loaded from the dependencyManagement closure.
     * This allows us to specify version numbers in a single place instead of spreading them over multiple modules
     * This BOM includes all dependencies that a Spring Boot application potentially might need
     */
    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-rsocket'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

